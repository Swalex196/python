{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "class Product(object):\n",
    "    def __init__(self,name:str=\"Default\",price:float=0,quantity:int=1) -> None:   # Değer verilmezse diye default değerler verdik. -> None da geriye bir şey döndürmeyecek demek\n",
    "        print(f\"An instance with name : {name}has been derived from Product class.\")\n",
    "\n",
    "        if not (3 <= len(name) <= 8):\n",
    "            raise ValueError(\"Ürün adı 3 karakter uzun 8 karakterden kısa olmalı !!!\")\n",
    "        if price < 0:\n",
    "            raise ValueError(\"Fiyat 0'dan küçük olamaz !!!\")\n",
    "        if quantity < 1:\n",
    "            raise ValueError(\"Ürün adedi en az 1 olmalı !!!\")\n",
    "        \n",
    "\n",
    "        self.__name = name\n",
    "        self.__price = price\n",
    "        self.__quantity = quantity\n",
    "\n",
    "    @property\n",
    "    def name(self):\n",
    "        return self.__name\n",
    "    \n",
    "    @property\n",
    "    def price(self):\n",
    "        return self.__price\n",
    "    \n",
    "    @property\n",
    "    def quantity(self):\n",
    "        return self.__quantity\n",
    "    \n",
    "    @name.setter\n",
    "    def name(self,value:str) -> None:\n",
    "        if not (3 <= len(value) <= 8):\n",
    "            raise ValueError(\"Ürün adı 3 karakter uzun 8 karakterden kısa olmalı !!!\")\n",
    "        self.__name = value\n",
    "\n",
    "    @price.setter\n",
    "    def price(self,value):\n",
    "        if value < 0:\n",
    "            raise ValueError(\"Fiyat 0'dan küçük olamaz !!!\")\n",
    "        self.__price = value\n",
    "\n",
    "    @quantity.setter\n",
    "    def quantity(self,value):\n",
    "        if value < 1:\n",
    "            raise ValueError(\"Ürün adedi en az 1 olmalı !!!\")\n",
    "        self.__quantity = value\n",
    "\n",
    "    def get_total_price(self):\n",
    "        return self.__price * self.__quantity\n",
    "    \n",
    "    def __repr__(self): # print(item1) çalıştırdığımızda bu fonksiyon çalışır\n",
    "        return f\"{self.__name} - {self.__price} - {self.__quantity} \"\n",
    "    \n",
    "class ProductHelper():\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "An instance with name : Laptophas been derived from Product class.\n",
      "HP Laptop - 799.99 - 2 \n"
     ]
    }
   ],
   "source": [
    "item1 = Product(\"Laptop\",799.99,2)\n",
    "item1.name = \"HP Laptop\"\n",
    "print(item1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "An instance with name : Computerhas been derived from Product class.\n",
      "Computer - 1999.99 - 3 \n"
     ]
    }
   ],
   "source": [
    "item2 = Product(\"Computer\")\n",
    "item2.price = 1999.99\n",
    "item2.quantity = 3\n",
    "print(item2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "An instance with name : Keybordhas been derived from Product class.\n",
      "Keybord - 25.99 - 1 \n"
     ]
    }
   ],
   "source": [
    "item3 = Product(\"Keybord\",25.99)\n",
    "print(item3)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
